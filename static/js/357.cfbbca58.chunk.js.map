{"version":3,"file":"static/js/357.cfbbca58.chunk.js","mappings":"0LAmCA,UA9BiB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,gBACZC,GAAeC,EAAAA,EAAAA,QAAO,MAoB5B,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8EACFH,EAAaI,QAAQC,iBAAiB,OAE9CC,SAAQ,SAACC,GAChB,IACMC,EAA0B,IADXD,EAAQE,aAE7BF,EAAQG,MAAMC,MAAd,UAAyBH,EAAzB,SANiB,2CAAH,qDAUK,IAAnBT,GAA0BC,EAAaI,SAI3CD,MACC,CAACJ,EAAiBC,EAAaI,WAGhC,gBAAKQ,IAAKZ,EAAca,UAAU,4BAAlC,UACE,SAAC,IAAD,CAAeC,cAAe,CAACC,EAAAA,GAA/B,SACGhB","sources":["components/Markdown/Markdown.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeRaw from 'rehype-raw';\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst Markdown = ({ markdownContent }) => {\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const resizeBadges = async () => {\r\n      const elements = containerRef.current.querySelectorAll('img');\r\n\r\n      elements.forEach((element) => {\r\n        const currentWidth = element.naturalWidth;\r\n        const newWidth = currentWidth * 1.5;\r\n        element.style.width = `${newWidth}px`;\r\n      });\r\n    };\r\n\r\n    if (markdownContent == '' || !containerRef.current) {\r\n      return;\r\n    }\r\n\r\n    resizeBadges();\r\n  }, [markdownContent, containerRef.current]);\r\n\r\n  return (\r\n    <div ref={containerRef} className=\"about__markdown-container\">\r\n      <ReactMarkdown rehypePlugins={[rehypeRaw]}>\r\n        {markdownContent}\r\n      </ReactMarkdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Markdown;\r\n"],"names":["markdownContent","containerRef","useRef","useEffect","resizeBadges","current","querySelectorAll","forEach","element","newWidth","naturalWidth","style","width","ref","className","rehypePlugins","rehypeRaw"],"sourceRoot":""}